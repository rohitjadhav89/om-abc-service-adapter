apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "om.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "om.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "om.fullname" . }}
  podManagementPolicy: Parallel
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "om.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "om.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "om.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          resources:
{{ toYaml .Values.resources | indent 12 }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9058
              protocol: TCP
          env:
            {{ if .Values.java.javaOpts }}
            - name: JAVA_OPTS
              value: {{ .Values.java.javaOpts }}
            {{ end }}
            - name: JAEGER_AGENT_HOST
              {{ if .Values.jaegerAgent.host }}
              value: "{{ .Values.jaegerAgent.host }}"
              {{ else }}
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
              {{ end }}
            - name: JAEGER_AGENT_PORT
              value: "{{ .Values.jaegerAgent.port }}"
            - name: SPRING_CONFIG_LOCATION
              value: /home/application/config/
            {{- $secretName := .Values.secrets.envSecret.name }}
            {{- range $value := .Values.secrets.envSecret.keys }}
            - name: "{{ $value }}"
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: "{{ required "$value is required"  $value }}"
            {{end}}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          startupProbe:
{{ toYaml .Values.startupProbe | indent 12 }}

          volumeMounts:
            - name: tmp
              mountPath: /tmp
          {{- if .Values.git.local }}
            - name: git
              mountPath: /home/application/git/git-workspace/
          {{- end }}
            - name: {{ include "om.fullname" . }}-application-file
              mountPath: /home/application/config/application.properties
              subPath: application.properties
            - name: {{ include "om.fullname" . }}-install-file
              mountPath: /home/application/config/install.properties
              subPath: install.properties
            - name: {{ include "om.fullname" . }}-logback-file
              mountPath: /home/application/config/logback.xml
              subPath: logback.xml
            - name: certs
              mountPath: /home/application/config/certs
      volumes:
        - name: tmp
          emptyDir: {}
        {{- if .Values.git.local }}
        - name: git
          hostPath:
            path: {{ .Values.git.localpath }}
        {{- end }}
        - name: {{ include "om.fullname" . }}-install-file
          configMap:
            name: {{ include "om.fullname" . }}-install-config

        - name: {{ include "om.fullname" . }}-logback-file
          configMap:
            name: {{ include "om.fullname" . }}-logback-config

        - name: {{ include "om.fullname" . }}-application-file
          configMap:
            name: {{ include "om.fullname" . }}-application-config

        - name: certs
          secret:
            secretName: {{ .Values.secrets.mountSecret.name }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      restartPolicy: Always
